name: Multi-OS Testing

on: ['push']  # Trigger the workflow on push and pull request events.

jobs:
  test:
    strategy:  # Enables testing across multiple OS and Python versions by defining a matrix of configurations.
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10']
      fail-fast: false  # Ensures all configurations are tested even if one fails.

    runs-on: ${{ matrix.os }}  # specifies the environment in which the job will run.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare results directory
        run: mkdir -p tests-result

      - name: Run tests and save results
        run: |
          # Generate JUnit XML for test results to integrate with CI tools:
          pytest tests/ --junitxml=tests-result/results.xml
        env:
          PYTHONPATH: ./src

      - name: Upload test results   # Upload test results for later analysis or debugging as artifacts.
        if: always()  # Upload even if one tests fail
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}  #name of the artifact.
          if-no-files-found: warn  # warn if no files are found
          path: |
            test-results/